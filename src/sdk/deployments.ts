/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { deploymentsDeployByTagOrUuid } from "../funcs/deploymentsDeployByTagOrUuid.js";
import { deploymentsGet } from "../funcs/deploymentsGet.js";
import { deploymentsList } from "../funcs/deploymentsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Deployments extends ClientSDK {
  /**
   * List
   *
   * @remarks
   * List currently running deployments
   */
  async list(
    options?: RequestOptions,
  ): Promise<Array<components.ApplicationDeploymentQueue>> {
    return unwrapAsync(deploymentsList(
      this,
      options,
    ));
  }

  /**
   * Get
   *
   * @remarks
   * Get deployment by UUID.
   */
  async get(
    request: operations.GetDeploymentByUuidRequest,
    options?: RequestOptions,
  ): Promise<components.ApplicationDeploymentQueue> {
    return unwrapAsync(deploymentsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Deploy
   *
   * @remarks
   * Deploy by tag or uuid. `Post` request also accepted.
   */
  async deployByTagOrUuid(
    request: operations.DeployByTagOrUuidRequest,
    options?: RequestOptions,
  ): Promise<operations.DeployByTagOrUuidResponseBody> {
    return unwrapAsync(deploymentsDeployByTagOrUuid(
      this,
      request,
      options,
    ));
  }
}
