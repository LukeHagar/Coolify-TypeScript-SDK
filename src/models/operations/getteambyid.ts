/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTeamByIdRequest = {
  /**
   * Team ID
   */
  id: number;
};

/** @internal */
export const GetTeamByIdRequest$inboundSchema: z.ZodType<
  GetTeamByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type GetTeamByIdRequest$Outbound = {
  id: number;
};

/** @internal */
export const GetTeamByIdRequest$outboundSchema: z.ZodType<
  GetTeamByIdRequest$Outbound,
  z.ZodTypeDef,
  GetTeamByIdRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTeamByIdRequest$ {
  /** @deprecated use `GetTeamByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetTeamByIdRequest$inboundSchema;
  /** @deprecated use `GetTeamByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetTeamByIdRequest$outboundSchema;
  /** @deprecated use `GetTeamByIdRequest$Outbound` instead. */
  export type Outbound = GetTeamByIdRequest$Outbound;
}

export function getTeamByIdRequestToJSON(
  getTeamByIdRequest: GetTeamByIdRequest,
): string {
  return JSON.stringify(
    GetTeamByIdRequest$outboundSchema.parse(getTeamByIdRequest),
  );
}

export function getTeamByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTeamByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTeamByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTeamByIdRequest' from JSON`,
  );
}
