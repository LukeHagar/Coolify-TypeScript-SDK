/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreatePrivateKeyRequestBody = {
  name?: string | undefined;
  description?: string | undefined;
  privateKey: string;
};

/**
 * The created private key's UUID.
 */
export type CreatePrivateKeyResponseBody = {
  uuid?: string | undefined;
};

/** @internal */
export const CreatePrivateKeyRequestBody$inboundSchema: z.ZodType<
  CreatePrivateKeyRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  private_key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "private_key": "privateKey",
  });
});

/** @internal */
export type CreatePrivateKeyRequestBody$Outbound = {
  name?: string | undefined;
  description?: string | undefined;
  private_key: string;
};

/** @internal */
export const CreatePrivateKeyRequestBody$outboundSchema: z.ZodType<
  CreatePrivateKeyRequestBody$Outbound,
  z.ZodTypeDef,
  CreatePrivateKeyRequestBody
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  privateKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    privateKey: "private_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePrivateKeyRequestBody$ {
  /** @deprecated use `CreatePrivateKeyRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreatePrivateKeyRequestBody$inboundSchema;
  /** @deprecated use `CreatePrivateKeyRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreatePrivateKeyRequestBody$outboundSchema;
  /** @deprecated use `CreatePrivateKeyRequestBody$Outbound` instead. */
  export type Outbound = CreatePrivateKeyRequestBody$Outbound;
}

export function createPrivateKeyRequestBodyToJSON(
  createPrivateKeyRequestBody: CreatePrivateKeyRequestBody,
): string {
  return JSON.stringify(
    CreatePrivateKeyRequestBody$outboundSchema.parse(
      createPrivateKeyRequestBody,
    ),
  );
}

export function createPrivateKeyRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreatePrivateKeyRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreatePrivateKeyRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreatePrivateKeyRequestBody' from JSON`,
  );
}

/** @internal */
export const CreatePrivateKeyResponseBody$inboundSchema: z.ZodType<
  CreatePrivateKeyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string().optional(),
});

/** @internal */
export type CreatePrivateKeyResponseBody$Outbound = {
  uuid?: string | undefined;
};

/** @internal */
export const CreatePrivateKeyResponseBody$outboundSchema: z.ZodType<
  CreatePrivateKeyResponseBody$Outbound,
  z.ZodTypeDef,
  CreatePrivateKeyResponseBody
> = z.object({
  uuid: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreatePrivateKeyResponseBody$ {
  /** @deprecated use `CreatePrivateKeyResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreatePrivateKeyResponseBody$inboundSchema;
  /** @deprecated use `CreatePrivateKeyResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreatePrivateKeyResponseBody$outboundSchema;
  /** @deprecated use `CreatePrivateKeyResponseBody$Outbound` instead. */
  export type Outbound = CreatePrivateKeyResponseBody$Outbound;
}

export function createPrivateKeyResponseBodyToJSON(
  createPrivateKeyResponseBody: CreatePrivateKeyResponseBody,
): string {
  return JSON.stringify(
    CreatePrivateKeyResponseBody$outboundSchema.parse(
      createPrivateKeyResponseBody,
    ),
  );
}

export function createPrivateKeyResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreatePrivateKeyResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreatePrivateKeyResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreatePrivateKeyResponseBody' from JSON`,
  );
}
