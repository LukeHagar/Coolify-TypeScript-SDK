/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RestartDatabaseByUuidRequest = {
  /**
   * UUID of the database.
   */
  uuid: string;
};

/**
 * Restart database.
 */
export type RestartDatabaseByUuidResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const RestartDatabaseByUuidRequest$inboundSchema: z.ZodType<
  RestartDatabaseByUuidRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string(),
});

/** @internal */
export type RestartDatabaseByUuidRequest$Outbound = {
  uuid: string;
};

/** @internal */
export const RestartDatabaseByUuidRequest$outboundSchema: z.ZodType<
  RestartDatabaseByUuidRequest$Outbound,
  z.ZodTypeDef,
  RestartDatabaseByUuidRequest
> = z.object({
  uuid: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RestartDatabaseByUuidRequest$ {
  /** @deprecated use `RestartDatabaseByUuidRequest$inboundSchema` instead. */
  export const inboundSchema = RestartDatabaseByUuidRequest$inboundSchema;
  /** @deprecated use `RestartDatabaseByUuidRequest$outboundSchema` instead. */
  export const outboundSchema = RestartDatabaseByUuidRequest$outboundSchema;
  /** @deprecated use `RestartDatabaseByUuidRequest$Outbound` instead. */
  export type Outbound = RestartDatabaseByUuidRequest$Outbound;
}

export function restartDatabaseByUuidRequestToJSON(
  restartDatabaseByUuidRequest: RestartDatabaseByUuidRequest,
): string {
  return JSON.stringify(
    RestartDatabaseByUuidRequest$outboundSchema.parse(
      restartDatabaseByUuidRequest,
    ),
  );
}

export function restartDatabaseByUuidRequestFromJSON(
  jsonString: string,
): SafeParseResult<RestartDatabaseByUuidRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RestartDatabaseByUuidRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RestartDatabaseByUuidRequest' from JSON`,
  );
}

/** @internal */
export const RestartDatabaseByUuidResponseBody$inboundSchema: z.ZodType<
  RestartDatabaseByUuidResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type RestartDatabaseByUuidResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const RestartDatabaseByUuidResponseBody$outboundSchema: z.ZodType<
  RestartDatabaseByUuidResponseBody$Outbound,
  z.ZodTypeDef,
  RestartDatabaseByUuidResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RestartDatabaseByUuidResponseBody$ {
  /** @deprecated use `RestartDatabaseByUuidResponseBody$inboundSchema` instead. */
  export const inboundSchema = RestartDatabaseByUuidResponseBody$inboundSchema;
  /** @deprecated use `RestartDatabaseByUuidResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    RestartDatabaseByUuidResponseBody$outboundSchema;
  /** @deprecated use `RestartDatabaseByUuidResponseBody$Outbound` instead. */
  export type Outbound = RestartDatabaseByUuidResponseBody$Outbound;
}

export function restartDatabaseByUuidResponseBodyToJSON(
  restartDatabaseByUuidResponseBody: RestartDatabaseByUuidResponseBody,
): string {
  return JSON.stringify(
    RestartDatabaseByUuidResponseBody$outboundSchema.parse(
      restartDatabaseByUuidResponseBody,
    ),
  );
}

export function restartDatabaseByUuidResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<RestartDatabaseByUuidResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RestartDatabaseByUuidResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RestartDatabaseByUuidResponseBody' from JSON`,
  );
}
