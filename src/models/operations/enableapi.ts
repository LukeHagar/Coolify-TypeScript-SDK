/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Enable API.
 */
export type EnableApiResponseBody = {
  message?: string | undefined;
};

/** @internal */
export const EnableApiResponseBody$inboundSchema: z.ZodType<
  EnableApiResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type EnableApiResponseBody$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const EnableApiResponseBody$outboundSchema: z.ZodType<
  EnableApiResponseBody$Outbound,
  z.ZodTypeDef,
  EnableApiResponseBody
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EnableApiResponseBody$ {
  /** @deprecated use `EnableApiResponseBody$inboundSchema` instead. */
  export const inboundSchema = EnableApiResponseBody$inboundSchema;
  /** @deprecated use `EnableApiResponseBody$outboundSchema` instead. */
  export const outboundSchema = EnableApiResponseBody$outboundSchema;
  /** @deprecated use `EnableApiResponseBody$Outbound` instead. */
  export type Outbound = EnableApiResponseBody$Outbound;
}

export function enableApiResponseBodyToJSON(
  enableApiResponseBody: EnableApiResponseBody,
): string {
  return JSON.stringify(
    EnableApiResponseBody$outboundSchema.parse(enableApiResponseBody),
  );
}

export function enableApiResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<EnableApiResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EnableApiResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EnableApiResponseBody' from JSON`,
  );
}
