/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdatePrivateKeyRequestBody = {
  name?: string | undefined;
  description?: string | undefined;
  privateKey: string;
};

/**
 * The updated private key's UUID.
 */
export type UpdatePrivateKeyResponseBody = {
  uuid?: string | undefined;
};

/** @internal */
export const UpdatePrivateKeyRequestBody$inboundSchema: z.ZodType<
  UpdatePrivateKeyRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  private_key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "private_key": "privateKey",
  });
});

/** @internal */
export type UpdatePrivateKeyRequestBody$Outbound = {
  name?: string | undefined;
  description?: string | undefined;
  private_key: string;
};

/** @internal */
export const UpdatePrivateKeyRequestBody$outboundSchema: z.ZodType<
  UpdatePrivateKeyRequestBody$Outbound,
  z.ZodTypeDef,
  UpdatePrivateKeyRequestBody
> = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  privateKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    privateKey: "private_key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePrivateKeyRequestBody$ {
  /** @deprecated use `UpdatePrivateKeyRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdatePrivateKeyRequestBody$inboundSchema;
  /** @deprecated use `UpdatePrivateKeyRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdatePrivateKeyRequestBody$outboundSchema;
  /** @deprecated use `UpdatePrivateKeyRequestBody$Outbound` instead. */
  export type Outbound = UpdatePrivateKeyRequestBody$Outbound;
}

export function updatePrivateKeyRequestBodyToJSON(
  updatePrivateKeyRequestBody: UpdatePrivateKeyRequestBody,
): string {
  return JSON.stringify(
    UpdatePrivateKeyRequestBody$outboundSchema.parse(
      updatePrivateKeyRequestBody,
    ),
  );
}

export function updatePrivateKeyRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePrivateKeyRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePrivateKeyRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePrivateKeyRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdatePrivateKeyResponseBody$inboundSchema: z.ZodType<
  UpdatePrivateKeyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  uuid: z.string().optional(),
});

/** @internal */
export type UpdatePrivateKeyResponseBody$Outbound = {
  uuid?: string | undefined;
};

/** @internal */
export const UpdatePrivateKeyResponseBody$outboundSchema: z.ZodType<
  UpdatePrivateKeyResponseBody$Outbound,
  z.ZodTypeDef,
  UpdatePrivateKeyResponseBody
> = z.object({
  uuid: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePrivateKeyResponseBody$ {
  /** @deprecated use `UpdatePrivateKeyResponseBody$inboundSchema` instead. */
  export const inboundSchema = UpdatePrivateKeyResponseBody$inboundSchema;
  /** @deprecated use `UpdatePrivateKeyResponseBody$outboundSchema` instead. */
  export const outboundSchema = UpdatePrivateKeyResponseBody$outboundSchema;
  /** @deprecated use `UpdatePrivateKeyResponseBody$Outbound` instead. */
  export type Outbound = UpdatePrivateKeyResponseBody$Outbound;
}

export function updatePrivateKeyResponseBodyToJSON(
  updatePrivateKeyResponseBody: UpdatePrivateKeyResponseBody,
): string {
  return JSON.stringify(
    UpdatePrivateKeyResponseBody$outboundSchema.parse(
      updatePrivateKeyResponseBody,
    ),
  );
}

export function updatePrivateKeyResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePrivateKeyResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePrivateKeyResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePrivateKeyResponseBody' from JSON`,
  );
}
