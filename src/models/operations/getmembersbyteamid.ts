/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetMembersByTeamIdRequest = {
  /**
   * Team ID
   */
  id: number;
};

/** @internal */
export const GetMembersByTeamIdRequest$inboundSchema: z.ZodType<
  GetMembersByTeamIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
});

/** @internal */
export type GetMembersByTeamIdRequest$Outbound = {
  id: number;
};

/** @internal */
export const GetMembersByTeamIdRequest$outboundSchema: z.ZodType<
  GetMembersByTeamIdRequest$Outbound,
  z.ZodTypeDef,
  GetMembersByTeamIdRequest
> = z.object({
  id: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMembersByTeamIdRequest$ {
  /** @deprecated use `GetMembersByTeamIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetMembersByTeamIdRequest$inboundSchema;
  /** @deprecated use `GetMembersByTeamIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetMembersByTeamIdRequest$outboundSchema;
  /** @deprecated use `GetMembersByTeamIdRequest$Outbound` instead. */
  export type Outbound = GetMembersByTeamIdRequest$Outbound;
}

export function getMembersByTeamIdRequestToJSON(
  getMembersByTeamIdRequest: GetMembersByTeamIdRequest,
): string {
  return JSON.stringify(
    GetMembersByTeamIdRequest$outboundSchema.parse(getMembersByTeamIdRequest),
  );
}

export function getMembersByTeamIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMembersByTeamIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMembersByTeamIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMembersByTeamIdRequest' from JSON`,
  );
}
